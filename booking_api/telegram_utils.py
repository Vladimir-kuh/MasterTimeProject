# booking_api/telegram_utils.py (–ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø)

import requests
from django.conf import settings
import logging

logger = logging.getLogger(__name__)


def send_telegram_notification(chat_id: str, message: str) -> bool:
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram. –¢–æ–∫–µ–Ω –∏–∑–≤–ª–µ–∫–∞–µ—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏
    –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏–∏, —á—Ç–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Django —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã.

    :param chat_id: Telegram Chat ID –º–∞—Å—Ç–µ—Ä–∞.
    :param message: –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è (–≤ —Ñ–æ—Ä–º–∞—Ç–µ Markdown).
    :return: True, –µ—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —É—Å–ø–µ—à–Ω–∞, –∏–Ω–∞—á–µ False.
    """
    # üö® –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–æ–∫–µ–Ω –∑–¥–µ—Å—å
    TELEGRAM_BOT_TOKEN = getattr(settings, "TELEGRAM_BOT_TOKEN", None)

    if not TELEGRAM_BOT_TOKEN:
        logger.error("–û—à–∏–±–∫–∞: TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ settings.py")
        return False

    if not chat_id:
        # –î–ª—è —Å–ª—É—á–∞–µ–≤, –∫–æ–≥–¥–∞ –º–∞—Å—Ç–µ—Ä –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –±–æ—Ç—É (chat_id = None)
        logger.warning("–û—à–∏–±–∫–∞: Chat ID –º–∞—Å—Ç–µ—Ä–∞ –Ω–µ —É–∫–∞–∑–∞–Ω.")
        return False

    url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"

    payload = {
        'chat_id': chat_id,
        'text': message,
        'parse_mode': 'Markdown',
    }

    try:
        response = requests.post(url, data=payload, timeout=5)
        # –ï—Å–ª–∏ Telegram –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 4xx –∏–ª–∏ 5xx, –±—É–¥–µ—Ç –≤–æ–∑–±—É–∂–¥–µ–Ω–æ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ RequestException
        response.raise_for_status()

        response_json = response.json()

        if response_json.get('ok'):
            logger.info(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç {chat_id}.")
            return True
        else:
            # –°—é–¥–∞ –ø–æ–ø–∞–¥–∞–µ–º, –µ—Å–ª–∏ response.raise_for_status() –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∫–æ–¥ 200 OK),
            # –Ω–æ Telegram API –≤–µ—Ä–Ω—É–ª {'ok': False}
            logger.error(f"–û—à–∏–±–∫–∞ API Telegram: {response_json.get('description')}")
            return False

    except requests.exceptions.HTTPError as e:
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏ 4xx (Bad Request, Forbidden) –∏ 5xx
        error_info = ""
        try:
            error_info = e.response.json().get('description', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')
        except:
            pass

        logger.error(f"–û—à–∏–±–∫–∞ HTTP ({e.response.status_code}) –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram: {error_info}")
        return False

    except requests.exceptions.RequestException as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –≤ Telegram: {e}")
        return False