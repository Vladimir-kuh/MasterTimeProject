# booking_api/management/commands/send_reminders.py

import logging
from django.core.management.base import BaseCommand
from django.conf import settings
from django.utils import timezone
from datetime import timedelta

# –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –≤–∞—à–∞ –º–æ–¥–µ–ª—å –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è Appointment
# –ó–∞–º–µ–Ω–∏—Ç–µ 'booking_api.models' –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π –ø—É—Ç—å, –µ—Å–ª–∏ –æ–Ω –¥—Ä—É–≥–æ–π
from booking_api.models import Appointment
from booking_api.telegram_utils import send_telegram_notification  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —É—Ç–∏–ª–∏—Ç—É

logger = logging.getLogger(__name__)


class Command(BaseCommand):
    help = '–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞–º –æ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –∑–∞–ø–∏—Å—è—Ö.'

    def handle(self, *args, **options):
        # 1. –ü–æ–ª—É—á–∞–µ–º —Å–º–µ—â–µ–Ω–∏–µ –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        offset_hours = getattr(settings, 'CLIENT_REMINDER_OFFSET_HOURS', 24)

        # 2. –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ –æ–∫–Ω–æ
        now = timezone.now()

        # –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –∑–∞ 24 —á–∞—Å–∞ (–∏–ª–∏ —Å–∫–æ–ª—å–∫–æ —É–∫–∞–∑–∞–Ω–æ)
        # –ú—ã –∏—â–µ–º –∑–∞–ø–∏—Å–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—á–Ω—É—Ç—Å—è —Ä–æ–≤–Ω–æ —á–µ—Ä–µ–∑ OFFSET —á–∞—Å–æ–≤
        reminder_time = now + timedelta(hours=offset_hours)

        # –ò—â–µ–º –∑–∞–ø–∏—Å–∏ –≤ —É–∑–∫–æ–º –æ–∫–Ω–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 1 –º–∏–Ω—É—Ç–∞)
        # –≠—Ç–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É –¥—É–±–ª–∏–∫–∞—Ç–æ–≤, –µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑
        time_start_window = reminder_time
        time_end_window = reminder_time + timedelta(minutes=1)

        logger.info(f"–ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π. –ò—â–µ–º –∑–∞–ø–∏—Å–∏ –º–µ–∂–¥—É {time_start_window} –∏ {time_end_window}.")

        # 3. –ó–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        try:
            # –ü–†–ò–ú–ï–ß–ê–ù–ò–ï: –ó–¥–µ—Å—å –Ω—É–∂–Ω–æ —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –≤–∞—à–∞ –º–æ–¥–µ–ª—å Appointment –∏–º–µ–µ—Ç –ø–æ–ª–µ
            # start_time (DateTimeField) –∏ client_chat_id (CharField)
            reminders_to_send = Appointment.objects.filter(
                start_time__gte=time_start_window,
                start_time__lt=time_end_window,
                is_client_reminder_sent=False,  # <-- –î–æ–±–∞–≤–∏–º —ç—Ç–æ –ø–æ–ª–µ –≤ –º–æ–¥–µ–ª—å –ø–æ–∑–∂–µ!
                # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∑–∞–ø–∏—Å—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞, –µ—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å —Å—Ç–∞—Ç—É—Å
                status='CONFIRMED',  # –ü–†–ò–ú–ï–†: —Ñ–∏–ª—å—Ç—Ä –ø–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–º –∑–∞–ø–∏—Å—è–º
            ).select_related('employee', 'service')

            if not reminders_to_send.exists():
                logger.info("–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
                return

            # 4. –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
            for appointment in reminders_to_send:

                # üö® –í–ê–ñ–ù–û: Chat ID –∫–ª–∏–µ–Ω—Ç–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—é –∏–ª–∏ –∑–∞–ø–∏—Å–∏
                # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –ø–æ–ª–µ client_chat_id
                client_chat_id = appointment.client_chat_id

                if not client_chat_id:
                    logger.warning(
                        f"–ö–ª–∏–µ–Ω—Ç –¥–ª—è –∑–∞–ø–∏—Å–∏ ID {appointment.id} –Ω–µ –∏–º–µ–µ—Ç Chat ID. –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
                    continue

                # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                message = (
                    f"‚è∞ **–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –∑–∞–ø–∏—Å–∏!**\n\n"
                    f"–í—ã –∑–∞–ø–∏—Å–∞–Ω—ã –Ω–∞ —É—Å–ª—É–≥—É **{appointment.service.name}** "
                    f"–∫ –º–∞—Å—Ç–µ—Ä—É **{appointment.employee.name}**.\n"
                    f"–í—Ä–µ–º—è: **{appointment.start_time.astimezone(timezone.get_current_timezone()).strftime('%d.%m %H:%M')}**\n"
                    f"–û–∂–∏–¥–∞–µ–º –í–∞—Å!"
                )

                logger.info(f"–ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—É {client_chat_id} –¥–ª—è –∑–∞–ø–∏—Å–∏ ID {appointment.id}.")

                if send_telegram_notification(client_chat_id, message):
                    # –ï—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —É—Å–ø–µ—à–Ω–∞, –ø–æ–º–µ—á–∞–µ–º –∑–∞–ø–∏—Å—å –∫–∞–∫ "–Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ"
                    appointment.is_client_reminder_sent = True
                    appointment.save(update_fields=['is_client_reminder_sent'])
                    logger.info(f"–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –¥–ª—è –∑–∞–ø–∏—Å–∏ ID {appointment.id} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
                else:
                    logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –¥–ª—è –∑–∞–ø–∏—Å–∏ ID {appointment.id}.")

        except Exception as e:
            logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã send_reminders: {e}")