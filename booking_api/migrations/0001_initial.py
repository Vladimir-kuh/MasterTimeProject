# Generated by Django 5.2.7 on 2025-10-01 14:46

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Имя Клиента')),
                ('phone_number', models.CharField(max_length=20, unique=True, verbose_name='Телефон')),
            ],
            options={
                'verbose_name': 'Клиент',
                'verbose_name_plural': 'Клиенты',
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название организации')),
                ('segment_name', models.CharField(default='Салон', max_length=50, verbose_name='Имя сегмента (для адаптивности)')),
                ('address', models.TextField(verbose_name='Адрес')),
            ],
            options={
                'verbose_name': 'Организация',
                'verbose_name_plural': 'Организации',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Имя Сотрудника/Мастера')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking_api.organization', verbose_name='Организация')),
            ],
            options={
                'verbose_name': 'Сотрудник/Мастер',
                'verbose_name_plural': 'Сотрудники/Мастера',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название Услуги/Работы')),
                ('duration_minutes', models.IntegerField(verbose_name='Длительность (мин)')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking_api.organization', verbose_name='Организация')),
            ],
            options={
                'verbose_name': 'Услуга/Работа',
                'verbose_name_plural': 'Услуги/Работы',
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(verbose_name='Время начала')),
                ('end_time', models.DateTimeField(verbose_name='Время окончания')),
                ('status', models.CharField(choices=[('PENDING', 'Ожидает подтверждения'), ('CONFIRMED', 'Подтверждена'), ('CANCELLED', 'Отменена'), ('COMPLETED', 'Завершена')], default='PENDING', max_length=10, verbose_name='Статус')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking_api.client')),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='booking_api.employee')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking_api.organization')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='booking_api.service')),
            ],
            options={
                'verbose_name': 'Запись/Бронирование',
                'verbose_name_plural': 'Записи/Бронирования',
                'constraints': [models.UniqueConstraint(fields=('employee', 'start_time'), name='unique_employee_time')],
            },
        ),
    ]
